{
    "module": {
        "description": "# Nmap Module\n\nThe `nmap` module provides a comprehensive interface to Nmap, supporting all scan types and parameters. It is designed for users from beginners to experts, including advanced features like scripting and evasion techniques.\n\n## Key Features\n- All Nmap scan types (TCP, UDP, ACK, etc.).\n- Scripting support with NSE.\n- Output in multiple formats (normal, XML, JSON).\n- Enhanced error handling and logging.\n\n## Usage\nImport `NmapScanner` and use its methods to perform scans.\n\n### Example\n```python\nscanner = NmapScanner()\nresult = scanner.scan_network('192.168.1.0/24', arguments='-sn')\n```",
        "features": [
            "Supports all Nmap parameters and scan types.",
            "Includes scripting capabilities with NSE.",
            "Allows output in various formats (normal, XML, JSON).",
            "Provides detailed logging and error handling."
        ]
    },
    "functions": {
        "scan_network": {
            "description": "## scan_network\n\nExecutes a customizable Nmap scan with support for all parameters.\n\n### Parameters\n\n| Parameter      | Type   | Description                                                                 | Default   |\n|----------------|--------|-----------------------------------------------------------------------------|-----------|\n| `hosts`        | str    | Target hosts (e.g., '192.168.1.1', '192.168.1.0/24')                        | Required  |\n| `ports`        | str    | Port range (e.g., '22-443')                                                 | None      |\n| `arguments`    | str    | Nmap arguments (e.g., '-sS', '-sU', '-sA')                                  | ''        |\n| `timing`       | str    | Timing template (e.g., 'T4')                                                | None      |\n| `sudo`         | bool   | Run with sudo for privileged scans                                          | False     |\n| `output_file`  | str    | File to save output                                                         | None      |\n| `output_format`| str    | Output format ('normal', 'xml', 'json')                                     | 'normal'  |\n| `script_args`  | str    | Arguments for NSE scripts (e.g., '--script vuln')                           | None      |\n| `**kwargs`     | dict   | Additional Nmap options (e.g., `decoy='-D RND:10'`)                         | {}        |\n\n### Returns\n- **Dict**: Scan results.\n\n### Examples\n\n#### Basic Ping Scan\n```python\nscanner.scan_network('192.168.1.0/24', arguments='-sn')\n```\nManual:\n```bash\nnmap -sn 192.168.1.0/24\n```\n\n#### TCP SYN Scan\n```python\nscanner.scan_network('target', ports='1-1000', arguments='-sS', sudo=True)\n```\nManual:\n```bash\nsudo nmap -sS -p 1-1000 target\n```\n\n#### Advanced Script Scan\n```python\nscanner.scan_network('target', script_args='--script vuln', output_file='scan.xml', output_format='xml')\n```\nManual:\n```bash\nnmap --script vuln -oX scan.xml target\n```",
            "short_description": "Run a customizable Nmap scan."
        },
        "get_open_ports": {
            "description": "## get_open_ports\n\nScans for open ports on target hosts.\n\n### Parameters\n\n| Parameter | Type   | Description                                   | Default |\n|-----------|--------|-----------------------------------------------|---------|\n| `hosts`   | str    | Target hosts                                  | Required|\n| `ports`   | str    | Port range (e.g., '1-65535')                  | None    |\n| `sudo`    | bool   | Run with sudo for privileged scans            | False   |\n\n### Returns\n- **List[int]**: List of open ports.\n\n### Example\n```python\nports = scanner.get_open_ports('192.168.1.1', ports='1-100')\n```",
            "short_description": "Retrieve open ports from a target."
        },
        "list_scripts": {
            "description": "## list_scripts\n\nLists available Nmap scripts.\n\n### Parameters\nNone\n\n### Returns\n- **List[str]**: List of script descriptions.\n\n### Example\n```python\nscripts = scanner.list_scripts()\n```",
            "short_description": "List available Nmap scripts."
        }
    }
}